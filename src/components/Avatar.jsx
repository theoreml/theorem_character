
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.12 public/models/base04.glb
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations, Wireframe } from '@react-three/drei'
import { useControls } from 'leva'
import { useFrame } from '@react-three/fiber'

export function Avatar(props) {
  const {animation } = props;
  const { wireframe, pause  } = useControls({
    wireframe: false,
    pause: false,
  })
  
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('models/base04.glb')
  // const { actions } = useAnimations(animations, group)

  const {animations: hypeboy} = useGLTF("animations/hypeboy.glb")
  const {animations: goated} = useGLTF("animations/goated.glb")
  const {animations: unforgiven} = useGLTF("animations/unforgiven.glb")

  hypeboy[0].name = "Hypeboy"
  goated[0].name = "Goated"
  unforgiven[0].name = "Unforgiven"

  const { actions } = useAnimations([hypeboy[0], goated[0], unforgiven[0]] ,group)

  useFrame((state) => {
    if (pause) {
      group.current.getObjectByName("Bip001 Neck" ).lookAt(state.camera.position)
    }
  })

  useEffect(() => {
    actions[animation].reset().play()
    return () => {
      actions[animation].reset().stop()
    }
  }, [animation])

  useEffect(() => {
    Object.values(materials).forEach((material) => {
      material.wireframe = wireframe
    });
  }, [wireframe]);  

  
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Bip001" position={[0, 0.36, -0.01]} rotation={[0, -Math.PI / 2, 0]} scale={0.01}>
          <group name="Bip001_Footsteps" position={[0, -36.13, 0]} rotation={[0, Math.PI / 2, 0]} />
          <primitive object={nodes.Bip001_Pelvis} />
          <group name="body">
            <skinnedMesh name="Mesh009" geometry={nodes.Mesh009.geometry} material={materials.Material_body} skeleton={nodes.Mesh009.skeleton} />
            <skinnedMesh name="Mesh009_1" geometry={nodes.Mesh009_1.geometry} material={materials['Material.002']} skeleton={nodes.Mesh009_1.skeleton} />
          </group>
          <skinnedMesh name="bottom_cloth" geometry={nodes.bottom_cloth.geometry} material={materials['Material.003']} skeleton={nodes.bottom_cloth.skeleton} />
          <skinnedMesh name="eyeballL" geometry={nodes.eyeballL.geometry} material={materials['Material.010']} skeleton={nodes.eyeballL.skeleton} />
          <skinnedMesh name="eyeballR" geometry={nodes.eyeballR.geometry} material={materials['Material.010']} skeleton={nodes.eyeballR.skeleton} />
          <skinnedMesh name="eyebrow" geometry={nodes.eyebrow.geometry} material={materials['Material.005']} skeleton={nodes.eyebrow.skeleton} />
          <skinnedMesh name="glasses01" geometry={nodes.glasses01.geometry} material={materials['Material.008']} skeleton={nodes.glasses01.skeleton} />
          <skinnedMesh name="hair" geometry={nodes.hair.geometry} material={materials['Material.005']} skeleton={nodes.hair.skeleton} />
          <skinnedMesh name="shoes" geometry={nodes.shoes.geometry} material={materials['Material.004']} skeleton={nodes.shoes.skeleton} />
          <skinnedMesh name="teeth" geometry={nodes.teeth.geometry} material={materials['chars_body01.001']} skeleton={nodes.teeth.skeleton} />
          <skinnedMesh name="top_cloth" geometry={nodes.top_cloth.geometry} material={materials['Material.002']} skeleton={nodes.top_cloth.skeleton} />
          <skinnedMesh name="eyelash" geometry={nodes.eyelash.geometry} material={materials['Material.005']} skeleton={nodes.eyelash.skeleton} morphTargetDictionary={nodes.eyelash.morphTargetDictionary} morphTargetInfluences={nodes.eyelash.morphTargetInfluences} />
          <skinnedMesh name="head" geometry={nodes.head.geometry} material={materials.Material_body} skeleton={nodes.head.skeleton} morphTargetDictionary={nodes.head.morphTargetDictionary} morphTargetInfluences={nodes.head.morphTargetInfluences} />
        </group>
        <group name="avata_g" rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
      </group>
    </group>
  )
}

useGLTF.preload('models/base04.glb')
